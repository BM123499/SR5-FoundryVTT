
type Many<T> = T[];
type OneOrMany<T> = T | Many<T>;
type MaybeEmpty<T> = T | null;
type StringOrNull = string | null;

type ActorSchema = {
    settings: string;
    buildmethod: string;
    imageformat: string;
    metatype: string;
    metatype_english: string;
    metatype_guid: string;
    metavariant: string;
    metavariant_english: string;
    metavariant_guid: string;
    movement: string;
    walk: string;
    run: string;
    sprint: string;
    movementwalk: string;
    movementswim: string;
    movementfly: string;
    prioritymetatype: string;
    priorityattributes: string;
    priorityspecial: string;
    //TODO look at this
    priorityskills: OneOrMany<{
        [key: string]: { priority: string; };
    }>;
    priorityresources: string;
    primaryarm: string;
    name: string;
    // Look at this
    // "mainmugshotbase64": "[...]",
    // "hasothermugshots": "False",
    // "othermugshots": null,
    gender: string;
    age: string;
    eyes: string;
    height: string;
    weight: string;
    skin: string;
    hair: string;
    description: string;
    background: string;
    concept: string;
    notes: string;
    alias: string;
    playername: string;
    gamenotes: string;
    limitphysical: string;
    limitmental: string;
    limitsocial: string;
    limitastral: string;
    contactpoints: string;
    contactpointsused: string;
    cfplimit: string;
    ainormalprogramlimit: string;
    aiadvancedprogramlimit: string;
    spellimit: string;
    karma: string;
    totalkarma: string;
    special: string;
    totalspecial: string;
    //todo look at this
    attributes: {};
    totalattributes: string;
    edgeused: string;
    edgeremaining: string;
    streetcred: string;
    calculatedstreetcred: string;
    totalstreetcred: string;
    burntstreetcred: string;
    notoriety: string;
    calculatednotoriety: string;
    totalnotoriety: string;
    publicawareness: string;
    calculatedpublicawareness: string;
    totalpublicawareness: string;
    astralreputation: string;
    totalastralreputation: string;
    wildreputation: string;
    totalwildreputation: string;
    created: string;
    nuyen: string;
    adept: string;
    magician: string;
    technomancer: string;
    ai: string;
    cyberwaredisabled: string;
    critter: string;
    totaless: string;
    tradition: MaybeEmpty<{
        guid: string;
        sourceid: string;
        istechnomancertradition: string;
        name: string;
        fullname: string;
        name_english: string;
        extra: string | null;
        spiritcombat: string;
        spiritdetection: string;
        spirithealth: string;
        spiritillusion: string;
        spiritmanipulation: string;
        spiritform: string;
        drainattributes: string;
        drainvalue: string;
        source: string;
        page: string;
    }>;
    dodge: string;
    armor: string;
    firearmor: string;
    coldarmor: string;
    electricityarmor: string;
    acidarmor: string;
    fallingarmor: string;
    armordicestun: string;
    firearmordicestun: string;
    coldarmordicestun: string;
    electricityarmordicestun: string;
    acidarmordicestun: string;
    fallingarmordicestun: string;
    armordicephysical: string;
    firearmordicephysical: string;
    coldarmordicephysical: string;
    electricityarmordicephysical: string;
    acidarmordicephysical: string;
    fallingarmordicephysical: string;
    physicalcm: string;
    physicalcmiscorecm: string;
    stuncm: string;
    stuncmismatrixcm: string;
    physicalcmfilled: string;
    stuncmfilled: string;
    cmthreshold: string;
    physicalcmthresholdoffset: string;
    stuncmthresholdoffset: string;
    cmoverflow: string;
    psyche: string;
    init: string;
    initdice: string;
    initvalue: string;
    initbonus: string;
    astralinit: string;
    astralinitdice: string;
    astralinitvalue: string;
    matrixarinit: string;
    matrixarinitdice: string;
    matrixarinitvalue: string;
    matrixcoldinit: string;
    matrixcoldinitdice: string;
    matrixcoldinitvalue: string;
    matrixhotinit: string;
    matrixhotinitdice: string;
    matrixhotinitvalue: string;
    riggerinit: string;
    magenabled: string;
    initiategrade: string;
    resenabled: string;
    submersiongrade: string;
    depenabled: string;
    groupmember: string;
    groupname: string | null;
    groupnotes: string | null;
    surprise: string;
    composure: string;
    judgeintentions: string;
    judgeintentionsresist: string;
    liftandcarry: string;
    memory: string;
    liftweight: string;
    carryweight: string;
    totalcarriedweight: string;
    fatigueresist: string;
    radiationresist: string;
    sonicresist: string;
    toxincontactresist: string;
    toxiningestionresist: string;
    toxininhalationresist: string;
    toxininjectionresist: string;
    pathogencontactresist: string;
    pathogeningestionresist: string;
    pathogeninhalationresist: string;
    pathogeninjectionresist: string;
    physiologicaladdictionresistfirsttime: string;
    physiologicaladdictionresistalreadyaddicted: string;
    psychologicaladdictionresistfirsttime: string;
    psychologicaladdictionresistalreadyaddicted: string;
    physicalcmnaturalrecovery: string;
    stuncmnaturalrecovery: string;
    indirectdefenseresist: string;
    directmanaresist: string;
    directphysicalresist: string;
    detectionspellresist: string;
    decreasebodresist: string;
    decreaseagiresist: string;
    decreaserearesist: string;
    decreasestrresist: string;
    decreasecharesist: string;
    decreaseintresist: string;
    decreaselogresist: string;
    decreasewilresist: string;
    illusionmanaresist: string;
    illusionphysicalresist: string;
    manipulationmentalresist: string;
    manipulationphysicalresist: string;
    skills: {
        skill: OneOrMany<{
            guid: string;
            suid: string;
            name: string;
            name_english: string;
            skillgroup: string;
            skillgroup_english: string;
            skillcategory: string;
            skillcategory_english: string;
            grouped: string;
            default: string;
            requiresgroundmovement: string;
            requiresswimmovement: string;
            requiresflymovement: string;
            rating: string;
            ratingmax: string;
            specializedrating: string;
            total: string;
            knowledge: string;
            exotic: string;
            buywithkarma: string;
            base: string;
            karma: string;
            spec: string | null;
            attribute: string;
            displayattribute: string;
            notes: string | null;
            source: string;
            page: string;
            attributemod: string;
            ratingmod: string;
            poolmod: string;
            islanguage: string;
            isnativelanguage: string;
            bp: string;
            skillspecializations: {
                skillspecialization: OneOrMany<{
                    guid: string;
                    name: string;
                    free: string;
                    expertise: string;
                    specbonus: string;
                }>;
            };
        }>;
        skillgroup: OneOrMany<{
            guid: string;
            name: string;
            name_english: string;
            rating: string;
            ratingmax: string;
            base: string;
            karma: string;
            isbroken: string;
        }>;
    };
    contacts: {
        contact: OneOrMany<{
            guid: string;
            name: string;
            role: string;
            location: string;
            connection: string;
            loyalty: string;
            metatype: string;
            gender: string;
            age: string;
            contacttype: string;
            preferredpayment: string;
            hobbiesvice: string;
            personallife: string;
            type: string;
            forcedloyalty: string;
            blackmail: string;
            family: string;
            notes: string | null;
        }>;
    };
    limitmodifiersphys: MaybeEmpty<{
        limitmodifier: OneOrMany<{
            guid: string;
            name: string;
            name_english: string;
            condition: string;
            notes?: string;
        }>;
    }>;
    limitmodifiersment: MaybeEmpty<{
        limitmodifier: OneOrMany<{
            guid: string;
            name: string;
            name_english: string;
            condition: string;
            notes?: string;
        }>;
    }>;
    limitmodifierssoc: MaybeEmpty<{
        limitmodifier: OneOrMany<{
            guid: string;
            name: string;
            name_english: string;
            condition: string;
            notes?: string;
        }>;
    }>;
    mentorspirits: MaybeEmpty<{
        mentorspirit: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            name_english: string;
            mentortype: string;
            advantage: string;
            advantage_english: string;
            disadvantage: string;
            disadvantage_english: string;
            extra: string;
            extrachoice1: string;
            extrachoice2: string;
            source: string;
            page: string;
            mentormask: string;
            notes?: string;
        }>;
    }>;
    spells: MaybeEmpty<{
        spell: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            fullname: string;
            name_english: string;
            descriptors: string;
            descriptors_english: string;
            category: string;
            category_english: string;
            type: string;
            type_english: string;
            range: string;
            range_english: string;
            damage: string;
            damage_english: string;
            duration: string;
            duration_english: string;
            dv: string;
            dv_english: string;
            alchemy: string;
            limited: string;
            barehandedadept: string;
            dicepool: string;
            source: string;
            page: string;
            extra: string;
            notes?: string;
        }>;
    }>;
    powers: {
        power: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            fullname: string;
            extra: string;
            pointsperlevel: string;
            adeptway: string;
            rating: string;
            totalpoints: string;
            action: string;
            source: string;
            page: string;
            notes: string | null;
            enhancements: string | null;
        }>;
    }
    spirits: null;
    complexforms: MaybeEmpty<{
        complexform: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            fullname: string;
            name_english: string;
            duration: string;
            fv: string;
            target: string;
            source: string;
            page: string;
            notes?: string;
        }>;
    }>;
    aiprograms: MaybeEmpty<{
        aiprogram: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            fullname: string;
            name_english: string;
            requiresprogram: string;
            source: string;
            page: string;
            notes?: string;
        }>;
    }>;
    martialarts: MaybeEmpty<{
        martialart: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            fullname: string;
            name_english: string;
            source: string;
            page: string;
            cost: string;
            martialarttechniques: MaybeEmpty<{
                martialarttechnique: OneOrMany<{
                    guid: string;
                    sourceid: string;
                    name: string;
                    name_english: string;
                    source: string;
                    page: string;
                    notes?: string;
                }>
            }>;
            notes?: string;
        }>;
    }>;
    armors: MaybeEmpty<{
        armor: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            fullname: string;
            name_english: string;
            category: string;
            category_english: string;
            armor: string;
            totalarmorcapacity: string;
            calculatedcapacity: string;
            capacityremaining: string;
            avail: string;
            cost: string;
            owncost: string;
            weight: string;
            ownweight: string;
            source: string;
            page: string;
            armorname: string | null;
            equipped: string;
            ratinglabel: string;
            wirelesson: string;
            armormods: MaybeEmpty<{
                armormod: OneOrMany<{
                    name: string;
                    fullname: string;
                    name_english: string;
                    category: string;
                    category_english: string;
                    armor: string;
                    maxrating: string;
                    rating: string;
                    ratinglabel: string;
                    avail: string;
                    cost: string;
                    owncost: string;
                    weight: string;
                    ownweight: string;
                    source: string;
                    page: string;
                    included: string;
                    equipped: string;
                    wirelesson: string;
                    gears: string | null;
                    extra: string | null;
                    notes: string | null;
                }>;
            }>;
            gears: string | null;
            extra: string | null;
            location: string | null;
            attack: string;
            sleaze: string;
            dataprocessing: string;
            firewall: string;
            devicerating: string;
            programlimit: string;
            iscommlink: string;
            isprogram: string;
            active: string;
            homenode: string;
            conditionmonitor: string;
            matrixcmfilled: string;
            notes: string | null;
        }>;
    }>;
    weapons: MaybeEmpty<{
        weapon: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            name_english: string;
            fullname: string;
            fullname_english: string;
            category: string;
            category_english: string;
            type: string;
            reach: string;
            accuracy: string;
            accuracy_noammo: string;
            accuracy_english: string;
            accuracy_english_noammo: string;
            rawaccuracy: string;
            damage: string;
            damage_noammo: string;
            damage_english: string;
            damage_noammo_english: string;
            rawdamage: string;
            ap: string;
            ap_noammo: string;
            ap_english: string;
            ap_english_noammo: string;
            rawap: string;
            mode: string | null;
            mode_noammo: string | null;
            mode_english: string | null;
            mode_english_noammo: string | null;
            rc: string;
            rc_noammo: string;
            rc_english: string;
            rc_english_noammo: string;
            rawrc: string;
            ammo: string;
            ammo_english: string;
            maxammo: string;
            conceal: string;
            avail: string;
            avail_english: string;
            cost: string;
            owncost: string;
            weight: string;
            ownweight: string;
            source: string;
            page: string;
            weaponname: string | null;
            location: string | null;
            attack: string;
            sleaze: string;
            dataprocessing: string;
            firewall: string;
            devicerating: string;
            programlimit: string;
            iscommlink: string;
            isprogram: string;
            active: string;
            homenode: string;
            conditionmonitor: string;
            matrixcmfilled: string;
            accessories?: {
                accessory: OneOrMany<{
                    guid: string;
                    sourceid: string;
                    name: string;
                    name_english: string;
                    mount: string;
                    extramount: string;
                    rc: string | null;
                    conceal: string;
                    avail: string;
                    ratinglabel: string;
                    cost: string;
                    owncost: string;
                    weight: string;
                    ownweight: string;
                    included: string;
                    source: string;
                    page: string;
                    accuracy: string;
                    notes: string | null;
                }>;
            };
            ranges: OneOrMany<{
                name: string;
                name_english: string;
                short: string | null;
                medium: string | null;
                long: string | null;
                extreme: string | null;
            }>;
            alternateranges: OneOrMany<{
                name: string | null;
                name_english: string | null;
                short: string | null;
                medium: string | null;
                long: string | null;
                extreme: string | null;
            }>;
            availableammo: string;
            currentammo: string;
            currentammo_english: string;
            clips: string | null;
            dicepool: string;
            dicepool_noammo: string;
            skill: string;
            wirelesson: string;
            notes: string | null;
        }>;
    }>;
    cyberwares: MaybeEmpty<{
        cyberware: OneOrMany<{
            name: string;
            name_english: string;
            category: string;
            category_english: string;
            ess: string;
            capacity: string;
            avail: string;
            cost: string;
            owncost: string;
            weight: string;
            ownweight: string;
            source: string;
            page: string;
            rating: string;
            minrating: string;
            maxrating: string;
            ratinglabel: string;
            allowsubsystems: string | null;
            wirelesson: string;
            grade: string;
            location: string | null;
            extra: string | null;
            improvementsource: string;
            isgeneware: string;
            attack: string;
            sleaze: string;
            dataprocessing: string;
            firewall: string;
            devicerating: string;
            programlimit: string;
            iscommlink: string;
            isprogram: string;
            active: string;
            homenode: string;
            conditionmonitor: string;
            matrixcmfilled: string;
            gears?: ActorSchema['gears'];
            children: ActorSchema['cyberwares'];
            notes: string | null;
        }>;
    }>;
    qualities: MaybeEmpty<{
        quality: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            name_english: string;
            extra: string;
            bp: string;
            qualitytype: string;
            qualitytype_english: string;
            qualitysource: string;
            metagenic: string;
            source: string;
            page: string;
            notes: string | null;
        }>;
    }>;
    lifestyles: MaybeEmpty<{
        lifestyle: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            city: string | null;
            district: string | null;
            borough: string | null;
            cost: string;
            totalmonthlycost: string;
            totalcost: string;
            dice: string;
            multiplier: string;
            months: string;
            purchased: string;
            type: string;
            increment: string;
            bonuslp: string;
            baselifestyle: string;
            trustfund: string;
            source: string;
            page: string;
            qualities: MaybeEmpty<{
                quality: OneOrMany<{
                    guid: string;
                    sourceid: string;
                    name: string;
                    fullname: string;
                    formattedname: string;
                    extra: string;
                    lp: string;
                    cost: string;
                    lifestylequalitytype: string;
                    lifestylequalitytype_english: string;
                    lifestylequalitysource: string;
                    free: string;
                    freebylifestyle: string;
                    isfreegrid: string;
                    source: string;
                    page: string;
                    notes: string | null;
                }>;
            }>;
            notes: string | null;
        }>;
    }>;
    gears: MaybeEmpty<{
        gear: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            name_english: string;
            category: string;
            category_english: string;
            ispersona: string;
            isammo: string;
            issin: string;
            capacity: string | null;
            armorcapacity: string | null;
            maxrating: string;
            rating: string;
            qty: string;
            avail: string;
            avail_english: string;
            cost: string;
            owncost: string;
            weight: string;
            ownweight: string;
            extra: string;
            bonded: string;
            equipped: string;
            wirelesson: string;
            location: string | null;
            gearname: string | null;
            source: string;
            page: string;
            attack: string;
            sleaze: string;
            dataprocessing: string;
            firewall: string;
            devicerating: string;
            programlimit: string;
            iscommlink: string;
            isprogram: string;
            active: string;
            homenode: string;
            conditionmonitor: string;
            matrixcmfilled: string;
            children: ActorSchema['gears'];
            weaponbonusdamage: string;
            weaponbonusdamage_english: string;
            weaponbonusap: string;
            weaponbonusap_english: string;
            weaponbonusacc: string;
            weaponbonusrange: string;
            weaponbonuspool: string;
            weaponbonussmartlinkpool: string;
            flechetteweaponbonusdamage: string;
            flechetteweaponbonusdamage_english: string;
            flechetteweaponbonusap: string;
            flechetteweaponbonusap_english: string;
            flechetteweaponbonusacc: string;
            flechetteweaponbonusrange: string;
            flechetteweaponbonuspool: string;
            flechetteweaponbonussmartlinkpool: string;
            notes: string | null;
        }>;
    }>;
    drugs: MaybeEmpty<{
        drug: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            name_english: string;
            category: string;
            category_english: string;
            qty: string;
            addictionthreshold: string;
            addictionrating: string;
            initiative: string;
            initiativedice: string;
            speed: string;
            duration: string;
            crashdamage: string;
            avail: string;
            avail_english: string;
            cost: string;
            attributes: MaybeEmpty<{
                attribute: OneOrMany<{
                    name: string;
                    name_english: string;
                    value: string;
                }>;
            }>;
            limits: MaybeEmpty<{
                limit: OneOrMany<{
                    name: string;
                    name_english: string;
                    value: string;
                }>;
            }>;
            qualities: MaybeEmpty<{
                quality: OneOrMany<{
                    name: string;
                    name_english: string;
                }>;
            }>;
            infos: MaybeEmpty<{
                info: OneOrMany<{
                    name: string;
                    name_english: string;
                }>;
            }>;
            notes: string | null;
        }>;
    }>;
    vehicles: MaybeEmpty<{
        vehicles: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            name_english: string;
            fullname: string;
            category: string;
            category_english: string;
            isdrone: string;
            handling: string;
            accel: string;
            speed: string;
            pilot: string;
            body: string;
            armor: string;
            seats: string;
            sensor: string;
            avail: string;
            cost: string;
            owncost: string;
            source: string;
            page: string;
            physicalcm: string;
            physicalcmfilled: string;
            vehiclename: string | null;
            maneuver: string;
            location: string | null;
            attack: string;
            sleaze: string;
            dataprocessing: string;
            firewall: string;
            devicerating: string;
            programlimit: string;
            iscommlink: string;
            isprogram: string;
            active: string;
            homenode: string;
            matrixcm: string;
            matrixcmfilled: string;
            mods: MaybeEmpty<{
                mod: OneOrMany<{
                    guid: string;
                    sourceid: string;
                    name: string;
                    name_english: string;
                    fullname: string;
                    category: string;
                    category_english: string;
                    limit: string | null;
                    slots: string;
                    rating: string;
                    ratinglabel: string;
                    avail: string;
                    cost: string;
                    owncost: string;
                    source: string;
                    wirelesson: string;
                    page: string;
                    included: string;
                    weapons: ActorSchema['weapons'];
                    cyberwares: ActorSchema['cyberwares'];
                    notes: string | null;
                }>;
            }>;
            gears: ActorSchema['gears'];
            weapons: ActorSchema['weapons'];
        }>;
    }>;
    //todo check
    initiationgrade: MaybeEmpty<{
        initiationgrade: OneOrMany<{
            guid: string;
            grade: string;
            group: string;
            ordeal: string;
            schooling: string;
            technomancer: string;
            notes: string | null;
        }>;
        metamagics: OneOrMany<MaybeEmpty<{
            metamagic: {
                guid: string;
                sourceid: string;
                name: string;
                fullname: string;
                name_english: string;
                source: string;
                page: string;
                grade: string;
                improvementsource: string;
                notes: string | null;
            };
        }>>;
        arts: OneOrMany<MaybeEmpty<{
            art: {
                guid: string;
                sourceid: string;
                name: string;
                fullname: string;
                name_english: string;
                source: string;
                page: string;
                improvementsource: string;
                notes: string | null;
            };
        }>>;
        enhancements: OneOrMany<MaybeEmpty<{
            enhancement: {
                guid: string;
                sourceid: string;
                name: string;   
                fullname: string;
                name_english: string;
                source: string;
                page: string;
                improvementsource: string;
                notes: string | null;
            };
        }>>;
    }>;
    metamagics: MaybeEmpty<{
        metamagic: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            fullname: string;
            name_english: string;
            source: string;
            page: string;
            grade: string;
            improvementsource: string;
            notes: string | null;
        }>;
    }>;
    arts: MaybeEmpty<{
        art: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            fullname: string;
            name_english: string;
            source: string;
            page: string;
            improvementsource: string;
            notes: string | null;
        }>;
    }>;
    enhancements: MaybeEmpty<{
        enhancement: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;   
            fullname: string;
            name_english: string;
            source: string;
            page: string;
            improvementsource: string;
            notes: string | null;
        }>;
    }>;
    critterpowers: MaybeEmpty<{
        critterpower: OneOrMany<{
            guid: string;
            sourceid: string;
            name: string;
            fullname: string;
            name_english: string;
            extra: string;
            category: string;
            category_english: string;
            type: string;
            action: string;
            range: string;
            duration: string;
            karma: string;
            source: string;
            page: string;
            notes?: string;
        }>;
    }>;
    sustainedobjects: MaybeEmpty<{
        sustainedobject: OneOrMany<{
            name: string;
            fullname: string;
            name_english: string;
            force: string;
            nethits: string;
            self: string;
        }>;
    }>;
    otherarmors: null;
    calendar: MaybeEmpty<{
        calendar: OneOrMany<{
            guid: string;
            year: string;
            month: string;
            week: string;
            notes?: string;
        }>;
    }>;
}
